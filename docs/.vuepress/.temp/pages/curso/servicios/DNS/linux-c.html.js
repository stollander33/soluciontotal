export const data = JSON.parse("{\"key\":\"v-9dc97b5a\",\"path\":\"/curso/servicios/DNS/linux-c.html\",\"title\":\"Linux C语言编程基本原理与实践\",\"lang\":\"es-ES\",\"frontmatter\":{\"title\":\"Linux C语言编程基本原理与实践\",\"date\":\"2019-02-01T17:30:20.000Z\",\"categories\":[\"backEnd\"],\"tags\":[\"C linux\"],\"summary\":\"一、C 语言是什么？ C 语言是一个有结构化程序设计、具有变量作用域以及递归功能的过程式语言。广泛用于系统软件与应用软件的开发。 C 语言，通俗的讲，就是人类和计算机交流的一种方式。 1.1 ANSI C ANSI C、ISO C、Standard C 是指美国国家标准协会（ANSI）和国际标准化组织（ISO）对 C 语言发布的标准。历史上，这个名字专门用于\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://fedora/curso/servicios/DNS/linux-c.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Supuestamente\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Linux C语言编程基本原理与实践\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"es-ES\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"C linux\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2019-02-01T17:30:20.000Z\"}],[\"link\",{\"rel\":\"canonical\",\"href\":\"https://supuestamente.es/curso/servicios/DNS/linux-c.html\"}]]},\"excerpt\":\"\",\"headers\":[{\"level\":2,\"title\":\"一、C 语言是什么？\",\"slug\":\"一、c-语言是什么\",\"children\":[{\"level\":3,\"title\":\"1.1 ANSI C\",\"slug\":\"_1-1-ansi-c\",\"children\":[]},{\"level\":3,\"title\":\"1.2 C 语言的特点\",\"slug\":\"_1-2-c-语言的特点\",\"children\":[]},{\"level\":3,\"title\":\"1.3 C 语言适合做什么？\",\"slug\":\"_1-3-c-语言适合做什么\",\"children\":[]}]},{\"level\":2,\"title\":\"二、开发环境与配置\",\"slug\":\"二、开发环境与配置\",\"children\":[{\"level\":3,\"title\":\"2.1 准备一个 linux 环境\",\"slug\":\"_2-1-准备一个-linux-环境\",\"children\":[]},{\"level\":3,\"title\":\"2.2 编辑器\",\"slug\":\"_2-2-编辑器\",\"children\":[]},{\"level\":3,\"title\":\"2.3 安装 vim\",\"slug\":\"_2-3-安装-vim\",\"children\":[]},{\"level\":3,\"title\":\"2.4 查看 cc 编译器\",\"slug\":\"_2-4-查看-cc-编译器\",\"children\":[]}]},{\"level\":2,\"title\":\"三、Linux 下的第一个C程序\",\"slug\":\"三、linux-下的第一个c程序\",\"children\":[{\"level\":3,\"title\":\"3.1 创建工程目录以及编辑 C 程序文件\",\"slug\":\"_3-1-创建工程目录以及编辑-c-程序文件\",\"children\":[]},{\"level\":3,\"title\":\"3.2 hello world\",\"slug\":\"_3-2-hello-world\",\"children\":[]},{\"level\":3,\"title\":\"3.3 编译 c 程序\",\"slug\":\"_3-3-编译-c-程序\",\"children\":[]},{\"level\":3,\"title\":\"3.4 执行编译后的 c 程序\",\"slug\":\"_3-4-执行编译后的-c-程序\",\"children\":[]}]},{\"level\":2,\"title\":\"四、多文件操作\",\"slug\":\"四、多文件操作\",\"children\":[{\"level\":3,\"title\":\"4.1 函数文件和入口文件分别定义\",\"slug\":\"_4-1-函数文件和入口文件分别定义\",\"children\":[]},{\"level\":3,\"title\":\"4.2 引用编译后的函数文件\",\"slug\":\"_4-2-引用编译后的函数文件\",\"children\":[]},{\"level\":3,\"title\":\"4.3 编写头文件\",\"slug\":\"_4-3-编写头文件\",\"children\":[]}]},{\"level\":2,\"title\":\"五、 Makefile 的编写和使用\",\"slug\":\"五、-makefile-的编写和使用\",\"children\":[{\"level\":3,\"title\":\"5.1 make 命令\",\"slug\":\"_5-1-make-命令\",\"children\":[]},{\"level\":3,\"title\":\"5.2 编写 Makefile\",\"slug\":\"_5-2-编写-makefile\",\"children\":[]},{\"level\":3,\"title\":\"5.3 执行 Makefile 生成目标文件\",\"slug\":\"_5-3-执行-makefile-生成目标文件\",\"children\":[]}]},{\"level\":2,\"title\":\"六、 main 函数的详解\",\"slug\":\"六、-main-函数的详解\",\"children\":[{\"level\":3,\"title\":\"6.1 main 函数中的 return\",\"slug\":\"_6-1-main-函数中的-return\",\"children\":[]},{\"level\":3,\"title\":\"6.2 main 函数中的参数\",\"slug\":\"_6-2-main-函数中的参数\",\"children\":[]}]},{\"level\":2,\"title\":\"七、 输入流、输出流、错误流\",\"slug\":\"七、-输入流、输出流、错误流\",\"children\":[{\"level\":3,\"title\":\"7.1 标准输入流输出流以及错误流\",\"slug\":\"_7-1-标准输入流输出流以及错误流\",\"children\":[]},{\"level\":3,\"title\":\"7.2 输入流输出流以及错误流的重定向\",\"slug\":\"_7-2-输入流输出流以及错误流的重定向\",\"children\":[]}]},{\"level\":2,\"title\":\"八、 使用管道打造实用的C语言程序\",\"slug\":\"八、-使用管道打造实用的c语言程序\",\"children\":[{\"level\":3,\"title\":\"8.1 什么是管道？\",\"slug\":\"_8-1-什么是管道\",\"children\":[]},{\"level\":3,\"title\":\"8.2 使用管道计算平均值\",\"slug\":\"_8-2-使用管道计算平均值\",\"children\":[]}]}],\"readingTime\":{\"minutes\":7.07,\"words\":2122},\"filePathRelative\":\"curso/servicios/DNS/linux-c.md\",\"localizedDate\":\"1 de febrero de 2019\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
